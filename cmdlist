
  #
  # Adding file
  #
	git add --verbose <pathspec>     # add all the files
  git add --dry-run .     # -n, --dry-run
  git add --force <pathspec>       # added otherwise ignored files `-f'
  git add --interactive <pathspec>    # add modified contents interactively

  #
  # Seeing file difference
  #

  git diff file
  git diff --cached file          # show "staged" changes

  git diff      # changes after last commit (current status)
  git diff SHA SHA 
  git diff --name-only SHA SHA    # only changed file names in between two commits

  # 
  # Undoing changes
  #

  # Undo changes done to the file
  git checkout -- <file>          

  # Unstage file of files to current commit
  git reset HEAD <file>

  # undo all the changes in the working directory
  git reset --hard

  # unstage file or files without arguments
  git reset -- <file>      

  # recover deleted file
  git reset <file>   

  # huy znajet
  git revert 


  # Removing file from index or working directory and index
  git rm

  # Adding more changes done to the file

  # 
  # Branches
  #

  git branch -a             # list all branches
  git checkout [-b] branch  # change the branch


  # 
  # Commits/changes
  #

  # re-commit with no edit of the commit message
  git commit --amend --no-edit

 	git config --list			  # git help config

  # 
  # Configure remotes
  #
  git remote add origin https://
  git remote get-url
  git remote set-url <name> <url>
  git branch --set-upstream-to=origin/master      # no need in specifying 'origin/master' then
                               master?

  git status --short --branch [--porcelain[=<version>]]
  git status --porcelain  # option promises a cross-version parsing output

  #
  # Ignoring files
  #

  # .gitignore
  doc/**/file.a     # ignore fiie in all the subdirectories of doc/ (one level)

  git check-ignore *        # check if any file in the current directory is ignored
  git check-ignore hacking  # check if 'hacking' file is ignored

  # 
  # Viewing files 
  #
  git ls-files --cached      # -c (default)
  git ls-files --deleted     # -d
  git ls-files --modified    # -m      
  git ls-files --others      # list untracked and ignored files
  git ls-files --others --exlude-standard      # list untracked

  git ls-files --others --exclude-from=.git/info/exclude

  git status --ignored

  #
  # Commit history
  #

  git log -n1 -f=%H    # display '1' commit
  git log --stat       # show summary of file modified in commit
  git log --stat -n1   # files in last commit (n==1)
  git log --oneline    # nice
	
	
  #
  # Control output with "pager"
  #
  git --paginate help -all    # same as `git -p help -a`
  #
  # Branches
  #
  git checkout -b <branch>
  git branch -d <branch>

  #
  # Getting help
  #
  git help 
  git-runner https://docs.gitlab.com/runner/configuration/advanced-configuration.html

  #
  # Git-crypt
  #
  git unlock
